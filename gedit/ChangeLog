2002-01-21  Marcel K. de Carli Silva <magaljedi@bol.com.br>

	* gedit2.c (main): check if args != NULL only one time
	(options): use POPT_ARG_NONE to indicate no argument

	* gedit-prefs.c (gedit_prefs_save_color): new functio
	(gedit_prefs_load_color): ditto
	(gedit_prefs_save_settings): use gedit_prefs_save_color
	(gedit_prefs_load_settings): use gedit_prefs_load_color

2002-01-20  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-plugins-engine.c (gedit_plugins_engine_load):
	load "configure", "save_settings", "update_ui" and "destroy"
	symbols

2002-01-18  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-mdi.c: update plugins UI when needed

	* gedit-plugin.h: cleaned a bit

	* gedit-plugins-engine.[ch]: implemented the plugin engine

	* gedit2.c (main): initialize the plugin engine
	
2002-01-18  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-document.c:  Fixed some little problems
	with auto-save

	* gedit2.c: removed plugin initialization

2002-01-17  James Willcox  <jwillcox@cs.indiana.edu>

	* gedit-document.c:  Added support for auto-save.
	(gedit_document_auto_save_timeout): New function
	(gedit_document_auto_save): ditto
	(gedit_document_save): reset auto save timer (if needed)
	(gedit_document_load): start auto save timer (if needed)
	(gedit_document_finalize): remove auto save timer

	* dialogs/gedit-preferences.glade2: made the auto save widgets
	sensitive.

2002-01-17  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-document.[ch] (gedit_document_insert_text_at_cursor):
	new function

	* gedit2.[ch] (gedit_get_top_windows): new function
	(gedit_get_ui_component_from_window): ditto

	* gedit-ui.xml: added a lot of new placeholders

2002-01-16  Paolo Maggi  <maggi@athena.polito.it>

	* Makefile.am: defined GEDIT_LOCALEDIR

	[Added a +<lnum> option (like vi)] Thanks to James Willcox 
	for his work on it

	[Started implemetation of plugin support]

	* gedit-plugin.h: new file

	* gedit-plugins-engine.[ch]: ditto

	[Fixed some bug with notebook labels in bonobo-mdi]
	
2002-01-15  Paolo Maggi  <maggi@athena.polito.it>
	
	* gedit-utils.h (gedit_text_iter_forward_search): new prototype

	* gedit-utils.c (gedit_text_iter_forward_search): new experimental
	function to perform case insensitive search (beside normal case
	sensitive search)
	(g_utf8_strcasestr): new private function
	(g_uft8_caselessnmatch): ditto
	(forward_chars_with_skipping): ditto
	(lines_match): ditto
	(strbreakup): ditto

	* gedit-document.c (gedit_document_find): enabled support for
	case insensitive search. Use the new gedit_text_iter_forward_search

	* dialogs/gedit-dialog-replace.c: enabled support for case insensitive
	search

2002-01-14  James Willcox <jwillcox@cs.indiana.edu>

	* dialogs/gedit-dialog-replace.c:  Made one small change
	in the wording of the search error message.  (The consensus is
	that the word "string" shouldn't appear in an error message).

	* dialogs/gedit-preferences.glade2:  More string fixes.

2002-01-14  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-document.c (gedit_document_load): add some debug
	message

	* gnome-vfs-helpers.c (gnome_vfs_x_read_entire_file): hack to
	fix a bug when loading ftp files

	* gedit-ui.xml: hide debug menu 
	
2002-01-13  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-prefs.c: save and load window size
	(gedit_prefs_configure_event_handler): new function
	
	* gedit-pref.h (gedit_prefs_configure_event_handler): 
	new prototype

	* gedit-mdi.c (gedit_mdi_app_created_handler): connect the
	"configure_event" signal of the created window to 
	gedit_prefs_configure_event_handler to track window size
  
2002-01-12  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-prefs.[ch]:
	* gedit-mdi.c:
	* gedit-view.[ch]:
	* dialogs/gedit-preferences-dialog.c:
	* dialogs/gedit-preferences-dialog.glade: 

	[Add current cursor position and overwrite
	mode on statusbar. Enjoy it - It is too late
	and I'm too lame to write a more detailed
	Change Log entry]

2002-01-11  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-view.c: now it can display line numbers
	(gedit_view_show_line_numbers): new function
	(gedit_view_get_lines): ditto
	(gedit_view_line_numbers_expose): ditto

	* gedit-view.h (gedit_view_show_line_numbers): new prototype
	
	* gedit-mdi.c (gedit_mdi_update_ui_according_to_preferences): call 
	gedit_view_show_line_numbers

	* gedit-prefs.[ch]: added the show_line_numbers setting

	* dialogs/gedit-preferences-dialog.c : added a line numbers page

	* dialogs/gedit-preferences-dialog.glade2: ditto

	* dialogs/gedit-dialog-goto-line.c (goto_button_pressed): go to the 
	right line number

2002-01-11  Paolo Maggi  <maggi@athena.polito.it>

	* gedit2.[ch]: added flags gedit_close_x_button_pressed and
	gedit_exit_button_pressed 

	* gedit-commands.c (gedit_cmd_file_close): update 
	gedit_close_x_button_pressed
	(gedit_cmd_file_close_all): ditto
	(gedit_cmd_file_exit): update gedit_exit_button_pressed

	* gedit-utils.[ch] (gedit_dialog_add_button): new function

	* gedit-file-selector-util.c (replace_existing_file): use new
	gedit_dialog_add_button function

	* gedit-prefs.h: cleaned

	* gedit-recent.c: renamed some functions (now all the function
	as the gedit prefix)

	* gedit-file.c: finished porting to the new gedit-file-selector API
	(gedit_file_save_as_real): new function
	(gedit_file_save_as_ok_button_clicked_handler): call 
	gedit_file_save_as_real

2002-01-10  Jason Leach  <jasonleach@usa.net>

	[Use gconf to store recent documents opened]

	* gedit-recent.c (gedit_recent_history_save): Renamed from
	gedit_recent_history_write_config.

	* gedit-recent.c (recent_history_get_list): Use gconf in place of
	gnome_config.
	(recent_history_update_list): Ditto.

2002-01-10  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-ui.xml: Exit button removed from toolbar

	* gedit-mdi.c (gedit_mdi_set_app_toolbar_style): really check
	system settings

	* gedit-commands.c (gedit_cmd_help_about): cosmetic changes

2002-01-09  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-utils.[ch] (gedit_button_new_with_stock_image): new function

	* dialogs/gedit-dialog-goto-line.c: now the goto line dialog is modal

	* dialogs/gedit-dialog-replace.c (dialog_replace_get_dialog): use the 
	new gedit_button_new_with_stock_image function to set an image for
	the replace button

2002-01-08  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-file-selector-util.[ch]: new files

	* gedit-file.c (gedit_file_open): use gedit_file_selector_open

	* gedit-undo-manager.c: fixed some UTF-8 related problem

	* gedit-document.c (gedit_document_save_as_real): save using locale
	encoding if requested

2002-01-07  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-print.c (gedit_print_create_new_page):  new static function
	(gedit_print_end_page): ditto
	(gedit_print_paragraph): use gedit_print_create_new_page and 
	gedit_print_end_page to create new pages
	(gedit_print_document): ditto

2002-01-07  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-print.c: now, it is possible to print line numbers
	(there are still some little issues to solve)
	(gedit_print_line): new static function

2002-01-05  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-document.h (gedit_document_has_selected_text): return FALSE
	if doc is not a GeditDocument

	* gedit-file.c (gedit_file_open_uri_list): fixed a compiler warning

	* gedit-prefs.c: load and save preferences for printing support
	(now they have new names)

	* gedit-print.c: use new preferences names

	* dialogs/gedit-preferences-dialog.c: the Print/Page page now 
	operates on the preferences

2002-01-04  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-commands.c (gedit_cmd_file_print_preview): uncommented

	* gedit-prefs.[ch]: added some preferences for printing support
	
	* gedit-print.c: refinements here and there

 	* dialogs/gedit-preferences-dialog.c: added a Print/Page page

	* dialogs/gedit-preferences.glade2: ditto


2002-01-04  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-print.c (gedit_print_get_next_line_to_print_delimiter): 
	little improvement in precision. It is still not so precise as I would
	like

2002-01-03  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-document.c (gedit_document_save_as_real): create
	a backup copy of the file before saving
	(gedit_document_has_selected_text): new function
	
	* gedit-document.h (gedit_document_has_selected_text): new 
	prototype

	* gedit-prefs.[ch]: preferences for printing support added

	* gedit-print.c: rewritten, now gedit2 has a basic printing
	support

	* dialog/gedit-preferences-dialog.c: added a Save page

	* dialogs/gedit-preferences.glade2: ditto

2001-12-29  Paolo Maggi  <maggi@athena.polito.it>
	
	* gedit-prefs.[ch]: rewritten

	* gedit-mdi.c: use new preference names
	
	* gedit-undo-manager.c: ditto

	* gedit-view.c: ditto
     
	* dialogs/gedit-preferences-dialog.c: ditto

2001-12-19  Paolo Maggi  <maggi@athena.polito.it>

	* bonobo-mdi.c (bonobo_mdi_init_instance): force tab position to be top

	* gedit-mdi.c (gedit_mdi_init): ditto
	
	* gedit-document.c: fixed some bugs when dealing with readonly docs
	
2001-12-17  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-commands.c (gedit_cmd_search_replace): call gedit_dialog_replace ()

	* gedit-document.c: added last_replace_text and last_search_was_case_sensitive
	fields to GeditDocumentPrivate
	(gedit_document_finalize): free last_replace_text
	(gedit_document_get_short_name): return the right value when  doc->priv->uri != NULL
	(gedit_document_begin_user_action): new public function
	(gedit_document_end_user_action): ditto
	(gedit_document_get_last_searched_text): call gedit_debug
	(gedit_document_get_last_replace_text): new public function
	(gedit_document_find): cleaned
	(gedit_document_get_selected_text): new public function
	(gedit_document_replace_selected_text): ditto
	(gedit_document_replace_all): ditto

	* gedit-document.h: added prototypes for new public functions (see gedit-document.c log)
	
	* dialogs/gedit-dialog-replace.c: added support for replace; find and replace dialog are no more
	modal

	Thanks to snorp (James Willcox  <jwillcox@cs.indiana.edu>) for his
	help in implementing find and replace.
	
2001-12-14  Gediminas Paulauskas <menesis@delfi.lt>

	* gedit-marshal.list: added this file with one marshaller, which
	previously was in libgnome.

	* Makefile.am: generate, use, and dist gedit-marshal.*

	* bonobo-mdi.c: replace gnome_marshal with gedit_marshal

2001-12-12  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-commands.c (TO_BE_IMPLEMENTED: set OK button as default 
	(gedit_cmd_search_find_again): set OK button as default in the GtkMessageDialog 
	(gedit_cmd_settings_preferences): added alert dialog

	* gedit-file.c: set OK button as default in all the alert dialogs
	(gedit_file_close_all): update UI items sensitivity

	* gedit-mdi.c (gedit_mdi_set_active_window_verbs_sensitivity): behave
	gently when active_window == NULL

	* gedit-prefs.c: write and read GEDIT_BASE_KEY GEDIT_PREF_WRAP_MODE and
        GEDIT_BASE_KEY GEDIT_PREF_TOOLBAR_LABELS as int

	* dialogs/gedit-preferences-dialog.c (gedit_preferences_dialog_update_settings):
	update font and colors settings even if the default ones are selected

2001-12-11  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-commands.c (gedit_cmd_help_about): fixed

	* dialogs/gedit-preferences-dialog.c : Save page added (it still
        does nothing)

2001-12-11  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-prefs.c (gedit_prefs_save_settings): check if gconf_client != NULL
	(gedit_prefs_load_settings): ditto
	(gedit_prefs_init): ditto

	* bonobo-mdi.c: calls to g_print removed

2001-12-10  James Willcox  <jwillcox@cs.indiana.edu>

	* gedit-prefs.c: Converted to use gconf.

2001-12-10  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-mdi.c (gedit_mdi_set_app_toolbar_style): icons->icon

2001-12-09  Paolo Maggi  <maggi@athena.polito.it>

	* bonobo-mdi.child.c (bonobo_mdi_child_instance_init): ref and sink mdi_child

	* bonobo-mdi.c (bonobo_mdi_instance_init): ref and sink mdi
	(book_motion)(book_button_press)(book_button_release): fix a bug related to
	GtkNotebook being NO_WINDOW
	(set_active_view): call gtk_widget_grab_focus on the view
	(bonobo_mdi_set_active_view): removed a call to gtk_widget_grab_focus

	* gedit-document.c (gedit_document_load): try to convert file contents to UTF8
	from current locale if the file contains invalid UTF8 data

	* gedit-file.c (gedit_file_exit): save prefs before unreffing gedit_mdi
	(gedit_file_open_uri_list): passes the active child to gedit_file_open_real

	* gedit-mdi-child.c (gedit_mdi_child_create_view): removed unused old code

	* gedit-mdi.c (gedit_mdi_update_ui_according_to_preferences): set selected 
	text colors
	(gedit_mdi_init): fix a leak
	
	* gedit-prefs.[ch]: added prefs for selected text colors

	* gedit-view.c (gedit_view_grab_focus): yeah, now we have a red blinking cursor
	(gedit_view_init)(gedit_view_set_colors): set selected text colors

	* dialogs/gedit-dialog-uri.c: ativate Open button when ENTER is pressed

	* dialogs/gedit-preferences-dialog.c: added support for selected text colors

2001-12-08  Abel Cheung  <maddog@linux.org.hk>

	* gedit-file.c: Fixed misspellings.

2001-12-03  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-commands.c (TO_BE_IMPLEMENTED): new macro
	(gedit_cmd_file_print): marked as TO_BE_IMPLEMENTED
	(gedit_cmd_file_print_preview): marked as TO_BE_IMPLEMENTED
	(gedit_cmd_help_about): added a caveat
	(gedit_cmd_search_find_again): new function
	(gedit_cmd_search_replace): marked as TO_BE_IMPLEMENTED

	* gedit-commands.h (gedit_cmd_search_find_again): new prototype

	* gedit-document.c (gedit_document_get_last_searched_text): new function
	(gedit_document_find_again): new function

	* gedit-document.h (gedit_document_get_last_searched_text): new prototype
	(gedit_document_find_again): ditto

	* gedit-menus.c: added SearchFindAgain to gedit_verbs []

	* gedit-prefs.c: added #include "gedit2.h".
	(gedit_prefs_save_settings): save the active top level window size

	* dialogs/gedit-dialog-replace.c (gedit_dialog_find): remember the last
	searched text per document

2001-12-03  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-document.c (gedit_document_find): when some text is selected and you
	want to search beginning from the cursor position, start searching
	from the end of the selection 

	* dialogs/gedit-dialog-replace.c: added beginning and cursor to _GeditDialogFind
	and _GeditDialogReplace
	(find_dlg_find_button_pressed): set active "search from cursor" radiobutton
	when needed

2001-12-02  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-document.c: added last_searched_text to GeditDocumentPrivate
        (gedit_document_finalize): free last_searched_text
	(gedit_document_find): new function

	* gedit-document.h (gedit_document_find): new prototype

	* gedit-mdi.c (gedit_mdi_update_ui_according_to_preferences): set wrap mode too

	* gedit-prefs.h : word_wrap -> wrap_mode

	* gedit-prefs.c : #define DEFAULT_FONTSET removed. 
	Definition of DEFAULT_FONT changed, now the default font is Sans 12
	(gedit_prefs_save_settings): save wrap_mode
	(gedit_prefs_load_settings): use g_new0 to allocate settings. Load wrap_mode. 
	Fix a memory leak with font.

	* gedit-print.c : some experiment with libgnomeprintui-2.0. It is really broken :-(

	* gedit-ui.xml : hide Plugins and Debug menus

	* gedit-view.c (gedit_view_init): use the preferrend wrap_mode when a GeditView is
	created. Fixed a bug with colors and font preferences.
	(gedit_view_set_colors): rewritten to use gtk_widget_modify_base and 
	gtk_widget_modify_text
	(gedit_view_set_font): rewritten to use gtk_widget_modify_font
	(gedit_view_set_wrap_mode): new function
	(gedit_view_set_tab_size): new function. ATTN: it is broken

	* gedit-view.h: (gedit_view_set_wrap_mode): new prototype
	(gedit_view_set_tab_size): new prototype

	* dialogs/gedit-dialog-replace.c : gedit-mdi-child.h and gedit-debug.h #included
	(find_dlg_find_button_pressed): implemented
	(gedit_dialog_find): close correcly the find dlg

	* dialogs/gedit-preferences-dialog.c : wrap mode page added.
	Save and Tabs pages hidden. Paper and Page empty pages added.
	(gedit_preferences_dialog_setup_logo_page): new function
	(gedit_preferences_dialog_setup_wrap_mode_page): ditto
	(gedit_preferences_dialog_update_settings): read data from wrap mode page too.
	
	* gedit-preferences.glade2 : wrap mode page added.

2001-11-28  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-commands.c (gedit_cmd_settings_preferences): now it really update gedit settings
	  (gedit_cmd_help_about): cleaned a bit

	* gedit-mdi.c (gedit_mdi_set_app_status_bar): removed
	  (gedit_mdi_set_app_statusbar_style): new functio
	  (gedit_mdi_set_app_toolbar_style): almost rewritten
	  (gedit_mdi_update_ui_according_to_preferences): new function

	* gedit-mdi.h (gedit_mdi_update_ui_according_to_preferences): new prototype

	* gedit-prefs.[ch]: removed some unused prefs

	* gedit-view.c (gedit_view_init): use the preferred colors and font when 
	  a GeditView is created
	  (gedit_view_set_colors): new function
	  (gedit_view_set_font): ditto

	* gedit-view.h (gedit_view_set_colors): new prototype
	  (gedit_view_set_font): ditto

	* dialogs/gedit-preferences-dialog.c: cleaned
          (gedit_preferences_dialog_update_settings): new function

2001-11-27  Paolo Maggi  <maggi@athena.polito.it>

	* dialogs/gedit-preferences-dialog.c: added Undo and Tabs pages, removed Save page.

	* dialogs/gedit-preferences.glade2: finished... I hope

2001-11-26  Paolo Maggi  <maggi@athena.polito.it>

	* Makefile.am: -DGEDIT_UI_DIR and -DGEDIT_GLADE_DIR added to INCLUDES,
	ui_DATA defined, added gedit-print.c and gedit-print.h to gedit2_SOURCES

	* bonobo-mdi.c (app_create): removed old commented code

	* gedit-commands.[ch] (gedit_cmd_file_print): new function
	  (gedit_cmd_file_print_preview): ditto
          (gedit_cmd_settings_preferences): ditto
	  
	* gedit-file.c	(gedit_file_save_as_ok_button_clicked_handler): typo

	* gedit-mdi.c (gedit_mdi_init): removed old commented code, search
	gedit-ui.xml in the rigth location

	* gedit-menus.c: added FilePrint, FilePrintPreview and SettingsPreferences to
	gedit_verbs []

	* gedit-prefs.[ch]: added two new preferences, i.e. use_default_font and use_default_colors

        * dialogs/Makefile.am: -DGEDIT_UI_DIR and -DGEDIT_GLADE_DIR added to INCLUDES,
	added gedit-preferences-dialog.[ch] to libdialogs_a_SOURCES

	* dialogs/gedit-dialog-goto-line.c (dialog_goto_line_get_dialog): search glade file in the rigth location

	* dialogs/gedit-dialog-uri.c (dialog_open_uri_get_dialog): ditto

	* dialogs/gedit-dialog-replace.c (dialog_replace_get_dialog): ditto
	  (gedit_dialog_replace): close window only when "replace all" or "close" button is pressed
	
	* gedit-print.[ch]
	* dialogs/gedit-preferences.glade2
	* dialogs/gedit-preferences-dialog.[ch]: new files


2001-11-23  Paolo Maggi  <maggi@athena.polito.it>

	* gedit-commands.[ch] (gedit_cmd_search_replace): new function 

	* gedit-menus.c: added SearchReplace to gedit_verbs []

	* dialogs/gedit-dialog-replace.c: almost rewritten 

	* dialogs/gedit-dialogs.h (gedit_dialog_replace): new prototype

2001-11-19  Paolo Maggi  <maggi@athena.polito.it>

	* bonobo-mdi.c: (bonobo_mdi_destroy) doesn't use GTK_OBJECT_DESTROYED anymore
	
	* gedit-document.[ch] (gedit_document_load_from_stdin): new function
	(gedit_document_begin_not_undoable_action): ditto
	(gedit_document_end_not_undoable_action): ditto

	* gedit-file.[ch] (gedit_file_open_from_stdin): new function
	
	* gedit-recent.c (gedit_recent_cb): check if active_child != NULL before
	casting to GEDIT_MDI_CHILD

	* gedit2.c (gedit_load_file_list): now calls gedit_file_open_from_stdin (NULL)

2001-11-16  Carlos Perelló Marín <carlos@gnome-db.org>

	* gedit2.c: Added support to AM_GLIB_GNU_GETTEXT
	* gedit-recent.c, gedit-utils.c, gedit-document.c, gedit-file.c:
	Fixed the gnome-vfs-helpers.h include.

2001-11-16  Paolo Maggi   <maggi@athena.polito.it>

	* Started the port to GNOME 2.0

2001-11-16  Carlos Perelló Marín <carlos@gnome-db.org>

	* ChangeLog: rolled over to ChangeLog-20011116.
