AC_INIT(src/gedit.c)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gEdit, 0.4.5)

AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL

dnl check for Gtk versions...
AM_PATH_GTK(1.0.5,
 	    [LIBS="$LIBS $GTK_LIBS"
	    CFLAGS="$CFLAGS $GTK_CFLAGS"],
	    AC_MSG_ERROR(Cannot find Gtk+: Is gtk-config in path?))

AC_MSG_CHECKING([wheter to use features from (unstable) GTK+ 1.1.x])
        AC_EGREP_CPP(answer_affirmatively,
        [#include <gtk/gtkfeatures.h>
        #ifdef GTK_HAVE_FEATURES_1_1_0
           answer_affirmatively
        #endif
        ], dev_gtk=yes, dev_gtk=no)
        if test "$dev_gtk" = "yes"; then
           USE_DEVGTK=true 
        fi 
        AC_MSG_RESULT("$dev_gtk")


dnl Let the user disable GNOME even if it can be found
AC_ARG_ENABLE(gnome,
	      [  --disable-gnome         Do not try to use GNOME ],
	      enable_gnome="$enableval",)
dnl If GNOME is found, run the script in square brackets.
if test x$enable_gnome != xno ; then
  GNOME_INIT_HOOK([have_gnome=yes])
fi
AM_CONDITIONAL(HAVE_GNOME, test x$have_gnome = xyes)
if test x$have_gnome != xyes ; then
  AC_DEFINE(WITHOUT_GNOME)
fi

dnl Let the user enable the new GModule Plugins
AC_ARG_WITH(gmodule-plugins,
	    [  --with-gmodule-plugins  Enable GModule Plugins [default=no]],
	    enable_gmodule_plugins="$withval", enable_gmodule_plugins=no)

dnl We need to have GNOME to use them
have_gmodule_plugins=no
if test x$have_gnome = xyes ; then
  if test x$enable_gmodule_plugins = xyes ; then
    AC_DEFINE(WITH_GMODULE_PLUGINS)
    have_gmodule_plugins=yes
  fi
fi
AM_CONDITIONAL(WITH_GMODULE_PLUGINS, test x$have_gmodule_plugins = xyes)

dnl Let the user disable ORBit even if it can be found
AC_ARG_ENABLE(orbit,
	      [  --enable-orbit          Try to use ORBit [default=no] ],
	      enable_orbit="$enableval", enable_orbit=no)
dnl We only need CORBA for plugins
if test x$have_gmodule_plugins = xyes ; then
  if test x$enable_orbit = xyes ; then
    GNOME_ORBIT_HOOK([have_orbit=yes])
  fi
fi
AM_CONDITIONAL(HAVE_ORBIT, test x$have_orbit = xyes)

dnl Check if we also have LibGnorba
if test x$have_orbit = xyes; then
  AC_CHECK_LIB(gnorba, gnome_CORBA_init, have_libgnorba=yes, have_libgnorba=no,
               $ORBIT_LIBS $GNOMEUI_LIBS)
fi
if test x$have_libgnorba = xyes ; then
  AC_DEFINE(HAVE_LIBGNORBA)
fi
AM_CONDITIONAL(HAVE_LIBGNORBA, test x$have_libgnorba = xyes)

if test x$have_gnome = xyes ; then
GNOME_X_CHECKS
fi

dnl Check for libzvt from gnome-libs/zvt
AC_CHECK_LIB(zvt, zvt_term_new, have_libzvt=yes, have_libzvt=no, $GNOMEUI_LIBS)
AM_CONDITIONAL(HAVE_LIBZVT, test x$have_libzvt = xyes)

dnl This is necessary when we don't have GNOME.
if test x$have_gnome != xyes ; then
  GNOMEUI_LIBS="$GTK_LIBS"
  GNOME_INCLUDEDIR="$GTK_CFLAGS"
fi

ALL_LINGUAS="de es cs fr ga it ko no pt ru_RU"
AM_GNU_GETTEXT


AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_OUTPUT([
Makefile
intl/Makefile
po/Makefile.in
macros/Makefile
src/Makefile
plugins/Makefile
plugins/idl/Makefile
plugins/goad/Makefile
plugins/diff/Makefile
plugins/cvsdiff/Makefile
plugins/email/Makefile
plugins/encrypt/Makefile
plugins/reverse/Makefile
plugins/spell/Makefile
plugins/prm/Makefile
plugins/convert/Makefile
plugins/testselect/Makefile
plugins/client/Makefile
plugins/hello/Makefile
plugins/shell/Makefile
plugins/launcher/Makefile
],[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])
