AC_INIT(src/gedit.c)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gEdit, 0.4.5)

AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)

dnl Let the user disable GNOME even if it can be found
AC_ARG_ENABLE(gnome,
	      [  --disable-gnome         Do not try to use GNOME ],
	      enable_gnome=yes, enable_gnome=no)

dnl If GNOME is found, run the script in square brackets.
if test x$enable_gnome != xno ; then
  GNOME_INIT_HOOK([have_gnome=yes])
fi
AM_CONDITIONAL(HAVE_GNOME, test x$have_gnome = xyes)

if test x$have_gnome != xyes ; then
  AC_DEFINE(WITHOUT_GNOME)
fi

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL

GNOME_X_CHECKS

dnl This is necessary when we don't have GNOME.
if test x$have_gnome != xyes ; then
  GNOMEUI_LIBS="$GTK_LIBS"
  GNOME_INCLUDEDIR="$GTK_CFLAGS"
fi

ALL_LINGUAS="de es cs fr ga it ko no pt"
AM_GNU_GETTEXT


AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_OUTPUT([
Makefile
intl/Makefile
po/Makefile.in
macros/Makefile
src/Makefile
plugins/Makefile
plugins/diff/Makefile
plugins/cvsdiff/Makefile
plugins/email/Makefile
plugins/encrypt/Makefile
plugins/reverse/Makefile
plugins/spell/Makefile
plugins/prm/Makefile
],[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])
